<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				autoDrawBackground="false" height="40" width="100%">
	<fx:Script>
		<![CDATA[
			import spark.components.BusyIndicator;
			import spark.events.IndexChangeEvent;
			
			import actionScripts.events.HelperEvent;
			import actionScripts.utils.HelperUtils;
			import actionScripts.utils.Parser;
			import actionScripts.valueObjects.ComponentVariantVO;
			import actionScripts.valueObjects.HelperConstants;
			
			private var busyIndicator:BusyIndicator;
			
			override public function set data(value:Object):void
			{
				if (value) 
				{
					super.data = value;
					
					if (data.isDownloading && !busyIndicator)
					{
						busyIndicator = new BusyIndicator();
						busyIndicator.verticalCenter = 0;
						busyIndicator.right = 10;
						busyIndicator.width = 46;
						addElementAt(busyIndicator, 1);
					}
					else if (!data.isDownloading && busyIndicator)
					{
						busyIndicator.stopAllMovieClips();
						removeElement(busyIndicator);
						busyIndicator = null;
					}
					
					setUI();
				}
			}
			
			protected function onDownloadRequest(event:MouseEvent):void
			{
				this.dispatchEvent(new HelperEvent(HelperEvent.DOWNLOAD_COMPONENT, data, true));
			}
			
			protected function onOpenMoonshineSettings(event:MouseEvent):void
			{
				this.dispatchEvent(new HelperEvent(HelperEvent.OPEN_MOON_SETTINGS, data, true));
			}
			
			private function setUI():void
			{
				imgQueued.includeInLayout = imgQueued.visible = false;
				if (data.isDownloading)
				{
					imgDownloaded.includeInLayout = imgDownloaded.visible = false;
					imgDownload.includeInLayout = imgDownload.visible = false;
				}
				else if (data.isDownloaded)
				{
					imgDownloaded.includeInLayout = imgDownloaded.visible = true;
					imgDownload.includeInLayout = imgDownload.visible = false;
				}
				else if (data.isSelectedToDownload)
				{
					imgDownloaded.includeInLayout = imgDownloaded.visible = false;
					imgDownload.includeInLayout = imgDownload.visible = false;
					imgQueued.includeInLayout = imgQueued.visible = true;
				}
				else
				{
					imgDownloaded.includeInLayout = imgDownloaded.visible = data.isAlreadyDownloaded;
					imgDownload.includeInLayout = imgDownload.visible= !data.isAlreadyDownloaded;
				}
				
				if (data.downloadVariants && data.downloadVariants.getItemAt(data.selectedVariantIndex).isReDownloadAvailable && 
					data.isAlreadyDownloaded && !data.isDownloading && !data.isSelectedToDownload)
				{
					imgReDownload.includeInLayout = imgReDownload.visible = true;
				}
				else
				{
					imgReDownload.includeInLayout = imgReDownload.visible = false;
				}
			}
			
			protected function onVariantChange(event:IndexChangeEvent):void
			{
				var tmpVariant:ComponentVariantVO = event.target.selectedItem as ComponentVariantVO;
				var installToPath:String = Parser.getInstallDirectoryPath(data.type, tmpVariant.version, HelperConstants.CONFIG_AIR_VERSION);
				data.selectedVariantIndex = event.newIndex;
				data.isAlreadyDownloaded = HelperUtils.isValidSDKDirectoryBy(data.type, installToPath, data.pathValidation);
				data.sizeInMb = tmpVariant.sizeInMb;
				
				// do update All Install button label
				this.dispatchEvent(new HelperEvent(HelperEvent.DOWNLOAD_VARIANT_CHANGED, null, true));
			}
			
		]]>
	</fx:Script>
	
	<s:Rect height="100%" width="100%">
		<s:fill>
			<s:LinearGradient rotation="0">
				<s:GradientEntry color="0xFFFFFF"/>
				<s:GradientEntry color="0xe4e4e4"/>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	
	<s:HGroup id="hgBody" 
			  width="100%" verticalCenter="0"
			  verticalAlign="middle" horizontalAlign="right"
			  paddingRight="20">
		<s:HGroup verticalAlign="middle"
				  visible="{(data.variantCount != 1) &amp;&amp; !data.isDownloading &amp;&amp; !data.isSelectedToDownload}" 
				  includeInLayout="{(data.variantCount != 1) &amp;&amp; !data.isDownloading &amp;&amp; !data.isSelectedToDownload}">
			<s:DropDownList id="ddlVariant" 
							dataProvider="{data.downloadVariants}"
							labelField="title" typicalItem="{ddlVariant.selectedItem}"
							requireSelection="true" color="0x000"
							selectedIndex="{data.selectedVariantIndex}" change="onVariantChange(event)"/>
			<s:Image source="@Embed('/helperResources/images/imgPackageHDivider.png')"
					 height="38" fillMode="repeat"/>
		</s:HGroup>
		<s:Label id="lblTitle" 
				 text="{data.title}" width="100%"
				 styleName="uiTextRendererLabelSub"
				 textAlign="right" paddingRight="10"/>
		<s:Image id="imgDownloaded"
				 width="50"
				 source="@Embed('/helperResources/images/icoTickNoLabel.png')"
				 includeInLayout="false" visible="false"
				 toolTip="Installed"/>
		<s:Image id="imgVersionNote"
				 source="@Embed('/helperResources/images/icoNoteNoLabel.png')"
				 includeInLayout="{data.oldInstalledVersion}" visible="{data.oldInstalledVersion}"
				 toolTip="Version Mismatch"/>
		<s:Image source="@Embed('/helperResources/images/icoNoteNoLabel.png')"
				 includeInLayout="{data.hasWarning}" visible="{data.hasWarning}"
				 toolTip="{data.hasWarning}"/>
		<s:Image source="@Embed('/helperResources/images/icoErrorNoLabel.png')"
				 includeInLayout="{data.hasError}" visible="{data.hasError}"
				 toolTip="{data.hasError}"/>
		<s:Image id="imgDownload"
				 width="50" buttonMode="true"
				 source="@Embed('/helperResources/images/icoDownloadNoLabel.png')"
				 includeInLayout="false" visible="false"
				 click="onDownloadRequest(event)" toolTip="Download"
				 alpha="{imgDownload.enabled ? 1 : .8}"
				 enabled="{HelperConstants.IS_RUNNING_IN_MOON || (!HelperConstants.IS_RUNNING_IN_MOON &amp;&amp; HelperConstants.IS_INSTALLER_READY)}"/>
		<s:Image id="imgReDownload"
				 width="50" buttonMode="true"
				 includeInLayout="false" visible="false"
				 source="@Embed('/helperResources/images/icoReDownloadNoLabel.png')"
				 click="onDownloadRequest(event)" toolTip="Re-Download"
				 alpha="{imgDownload.enabled ? 1 : .8}"
				 enabled="{HelperConstants.IS_RUNNING_IN_MOON || (!HelperConstants.IS_RUNNING_IN_MOON &amp;&amp; HelperConstants.IS_INSTALLER_READY)}"/>
		<s:Image id="imgQueued" 
				 width="50"
				 source="@Embed('/helperResources/images/icoQueuedNoLabel.png')"
				 includeInLayout="false" visible="false"
				 toolTip="In Queue"/>
		<s:Spacer width="50"
				  includeInLayout="{data.isDownloading}" visible="{data.isDownloading}"/>
		<s:Image source="@Embed('/helperResources/images/icoConfigureNoLabel.png')"
				 includeInLayout="{HelperConstants.IS_RUNNING_IN_MOON}" visible="{HelperConstants.IS_RUNNING_IN_MOON}"
				 buttonMode="true" click="onOpenMoonshineSettings(event)"
				 toolTip="Configure"/>
	</s:HGroup>
	
	<s:Image source="{HelperConstants.BG_LIST_DIVIDER_WHITE}" width="100%" fillMode="repeat"
			 bottom="0"/>
</s:ItemRenderer>