<?xml version="1.0" encoding="utf-8"?>

<!--
////////////////////////////////////////////////////////////////////////////////
//
//  Copyright (C) STARTcloud, Inc. 2015-2022. All rights reserved.
//
//  This program is free software: you can redistribute it and/or modify
//  it under the terms of the Server Side Public License, version 1,
//  as published by MongoDB, Inc.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
//  Server Side Public License for more details.
//
//  You should have received a copy of the Server Side Public License
//  along with this program. If not, see
//
//  http://www.mongodb.com/licensing/server-side-public-license
//
//  As a special exception, the copyright holders give permission to link the
//  code of portions of this program with the OpenSSL library under certain
//  conditions as described in each individual source file and distribute
//  linked combinations including the program with the OpenSSL library. You
//  must comply with the Server Side Public License in all respects for
//  all of the code used other than as permitted herein. If you modify file(s)
//  with this exception, you may extend this exception to your version of the
//  file(s), but you are not obligated to do so. If you do not wish to do so,
//  delete this exception statement from your version. If you delete this
//  exception statement from all source files in the program, then also delete
//  it in the license file.
//
////////////////////////////////////////////////////////////////////////////////
-->

<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:local="*" xmlns:controls="ws.tink.spark.controls.*">
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("ws.tink.spark.controls.ProgressBar")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
			{
				barColor.color = getStyle( "chromeColor" );
				
				border.radiusX = border.radiusY = unscaledHeight / 2;
				fill.radiusX = fill.radiusY = ( unscaledHeight - 2 ) / 2;
				barFill.radiusX = barFill.radiusY = ( unscaledHeight - 4 ) / 2;
				barHighlight.radiusX = barHighlight.radiusY = ( unscaledHeight - 4 ) / 2;
				
				bar.minWidth = unscaledHeight-4;
				
				super.updateDisplayList( unscaledWidth, unscaledHeight );
			}
		]]>
	</fx:Script>
	
	<!-- SkinParts
	name=percentLayout, type=PercentLayout, required=true
	-->
	
	<s:layout>
		<controls:PercentLayout id="percentLayout" resizeItems="{[bar]}"/>
	</s:layout>
	
	
	
	<s:Group width="100%" height="100%">
		
		<s:filters>
			<s:DropShadowFilter blurX="4" blurY="4" inner="true" distance="1" angle="124" color="0x7b7b7b" alpha="0.4"/>
		</s:filters>
		
		<!-- border -->
		<!--- @private -->
		<s:Rect id="border" left="0" right="0" top="0" bottom="0">
			<s:fill>
				<s:LinearGradient rotation="90">
					<s:GradientEntry color="0xBFBFBF"/>
					<s:GradientEntry color="0xFFFFFF"/>
				</s:LinearGradient>
			</s:fill>
		</s:Rect>
		
		<!-- fill -->
		<!--- @private -->
		<s:Rect id="fill" left="1" right="1" top="1" bottom="1">
			<s:fill>
				<s:SolidColor color="0xFFFFFF"/>
			</s:fill>
		</s:Rect>
		
	</s:Group>
	
	<s:Group id="bar" left="2" right="2" top="2" bottom="2">
		
		<s:filters>
			<s:DropShadowFilter blurX="0" blurY="0" inner="true" distance="1" angle="90" color="0xffffff" alpha="0.2"/>
		</s:filters>
		
		<s:Rect id="barFill" width="100%" height="100%">
			<s:fill>
				<s:SolidColor id="barColor"/>
			</s:fill>
		</s:Rect>
		
		<s:Rect id="barHighlight" width="100%" height="100%">
			<s:fill>
				<s:LinearGradient rotation="90">
					<s:GradientEntry alpha="0.5" color="0xFFFFFF"/>
					<s:GradientEntry alpha="0" color="0xFFFFFF"/>
				</s:LinearGradient>
			</s:fill>
		</s:Rect>
		
	</s:Group>
</s:Skin>
