<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
//
//  Copyright (C) 2016-present Prominic.NET, Inc.
//
//  This program is free software: you can redistribute it and/or modify
//  it under the terms of the Server Side Public License, version 1,
//  as published by MongoDB, Inc.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
//  Server Side Public License for more details.
//
//  You should have received a copy of the Server Side Public License
//  along with this program. If not, see
//
//  http://www.mongodb.com/licensing/server-side-public-license
//
//  As a special exception, the copyright holders give permission to link the
//  code of portions of this program with the OpenSSL library under certain
//  conditions as described in each individual source file and distribute
//  linked combinations including the program with the OpenSSL library. You
//  must comply with the Server Side Public License in all respects for
//  all of the code used other than as permitted herein. If you modify file(s)
//  with this exception, you may extend this exception to your version of the
//  file(s), but you are not obligated to do so. If you do not wish to do so,
//  delete this exception statement from your version. If you delete this
//  exception statement from all source files in the program, then also delete
//  it in the license file.
//
////////////////////////////////////////////////////////////////////////////////
-->
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   addedToStage="onAppAddedToStage(event)" preinitialize="onPreinit(event)" creationComplete="onCreationCompletes(event)" closing="onApplicationClosing(event)"
					   width="790" height="570" xmlns:nativeApplicationUpdater="actionScripts.extSources.nativeApplicationUpdater.*" xmlns:components="components.*"
					   frameRate="60" applicationDPI="120" backgroundColor="0xf5f5f5">
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import actionScripts.ui.menu.MenuManager;
			import actionScripts.utils.InstallerUtils;
			import actionScripts.valueObjects.InstallerConstants;
			
			import components.AboutDialog;
			
			//private var installerView:MoonshineAppStoreHelperLibMain;
			private var aboutView:AboutDialog;
			private var menuManager:MenuManager;
			
			private function onPreinit(event:FlexEvent):void
			{
				// application version
				var appDescriptor:XML = nativeApplication.applicationDescriptor;
				var xmlns:Namespace = new Namespace(appDescriptor.namespace());
				InstallerConstants.applicationVersion = appDescriptor.xmlns::versionNumber;
				
				// build version
				InstallerUtils.readBuildVersion();
			}
			
			private function onAppAddedToStage(event:Event):void
			{
				var win : NativeWindow = stage.nativeWindow;
				win.x = (Screen.mainScreen.visibleBounds.width - win.width)/2;
				win.y = (Screen.mainScreen.visibleBounds.height - win.height)/2;
				
				menuManager = new MenuManager();
				menuManager.addEventListener("EVENT_ABOUT", onAboutWindow, false, 0, true);
				menuManager.addEventListener("MENU_QUIT_EVENT", onQuitEvent, false, 0, true);
			}
			
			protected function onCreationCompletes(event:FlexEvent):void
			{
				updater.initialize();
			}
			
			private function onAboutWindow(event:Event):void
			{
				// probable termination
				if (aboutView) return;
				
				aboutView = new AboutDialog;
				aboutView.minimizable = aboutView.maximizable = aboutView.resizable = false;
				aboutView.alwaysInFront = true;
				aboutView.addEventListener(Event.CLOSE, onAboutViewClosed, false, 0, true);
				aboutView.open();
				
				aboutView.move((Screen.mainScreen.bounds.width - aboutView.width)/2, (Screen.mainScreen.bounds.height - aboutView.height)/2);
			}
			
			private function onAboutViewClosed(event:Event):void
			{
				aboutView = null;
			}
			
			private function onQuitEvent(event:Event):void
			{
				NativeApplication.nativeApplication.exit();
			}
			
			protected function onApplicationClosing(event:Event):void
			{
				if (aboutView) aboutView.close();
			}
			
		]]>
	</fx:Script>
	<fx:Script source="actionScripts/utils/AutoUpdater.as"/>
	<fx:Style source="/assets/styles/InstallApacheFlexStyle.css"/>
	<fx:Declarations>
		<nativeApplicationUpdater:NativeApplicationUpdater id="updater" updateURL="https://moonshine-ide.com/downloads/msdki/MoonshineSDKInstaller_update_v2.xml"
														   initialized="updater_initializedHandler(event)"
														   updateStatus="updater_updateStatusHandler(event)"
														   error="updater_errorHandler(event)"
														   downloadError="updater_errorHandler(event)"
														   updateError="updater_errorHandler(event)"/>
	</fx:Declarations>
	
	<components:HelperInstaller width="100%" height="100%"/>
	
	<components:UpdaterView width="100%" height="100%"
							includeInLayout="{isUpdater}" visible="{isUpdater}"
							updater="{updater}" downlaoding="{downlaoding}"
							UPDATEYES="btnYes_clickHandler(event)" UPDATENO="btnNo_clickHandler(event)" UPDATECANCEL="btnCancel_clickHandler(event)"/>
</s:WindowedApplication>